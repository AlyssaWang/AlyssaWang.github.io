{"ast":null,"code":"var _jsxFileName = \"/Users/alyssawang/MEGA/CS/Personal Website/alyssawang/src/routes/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Box, Toolbar, Typography } from \"@mui/material\"; // import \"../styles/Projects.css\";\n\nimport TitleSidebar from \"../components/TitleSidebar\";\nimport ItemCard from \"../components/ItemCard\";\nimport { makeStyles } from \"@mui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100vh\",\n    backgroundColor: \"#F8E9A1\"\n  },\n  cardContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  }\n});\n\nfunction Projects() {\n  _s();\n\n  const classes = useStyles();\n  const projects = [{\n    id: \"gridiron-gauntlet\",\n    title: \"Gridiron Gauntlet\",\n    subtitle: \"Game Design, Gesture Recognition, Collision Detection\",\n    link: \"https://bit.ly/gridirongauntlet\",\n    textList: [\"Software Methods final project.\", \"Single player iOS clone of the Super Mario Party game, Gridiron Gauntlet. The player must avoid colliding with time-scaled moving enemies within the game board bounds for as long as possible.\", \"Swift/Xcode, SpriteKit, UIKit, GameplayKit, CoreGraphics\"]\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TitleSidebar, {\n      title: \"Projects\",\n      file: \"projects.pdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.cardContainer,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), projects.map((project, i) => /*#__PURE__*/_jsxDEV(ItemCard, {\n        id: `${project.id}-${i}`,\n        link: project.link,\n        title: project.title,\n        subtitle: project.subtitle,\n        textList: project.textList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Projects, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/alyssawang/MEGA/CS/Personal Website/alyssawang/src/routes/Projects.js"],"names":["React","Box","Toolbar","Typography","TitleSidebar","ItemCard","makeStyles","useStyles","root","display","flexDirection","height","backgroundColor","cardContainer","alignItems","justifyContent","width","Projects","classes","projects","id","title","subtitle","link","textList","map","project","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,UAAvB,QAAyC,eAAzC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAC3BE,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,KAFX;AAGJC,IAAAA,MAAM,EAAE,OAHJ;AAIJC,IAAAA,eAAe,EAAE;AAJb,GADqB;AAO3BC,EAAAA,aAAa,EAAE;AACbJ,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,aAAa,EAAE,QAFF;AAGbI,IAAAA,UAAU,EAAE,QAHC;AAIbC,IAAAA,cAAc,EAAE,QAJH;AAKbC,IAAAA,KAAK,EAAE;AALM;AAPY,CAAD,CAA5B;;AAgBA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAMY,QAAQ,GAAG,CACf;AACEC,IAAAA,EAAE,EAAE,mBADN;AAEEC,IAAAA,KAAK,EAAE,mBAFT;AAGEC,IAAAA,QAAQ,EAAE,uDAHZ;AAIEC,IAAAA,IAAI,EAAE,iCAJR;AAKEC,IAAAA,QAAQ,EAAE,CACR,iCADQ,EAER,iMAFQ,EAGR,0DAHQ;AALZ,GADe,CAAjB;AAcA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACV,IAAxB;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC,UAApB;AAA+B,MAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEU,OAAO,CAACL,aAAxB;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGM,QAAQ,CAACM,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBACZ,QAAC,QAAD;AACE,QAAA,EAAE,EAAG,GAAED,OAAO,CAACN,EAAG,IAAGO,CAAE,EADzB;AAEE,QAAA,IAAI,EAAED,OAAO,CAACH,IAFhB;AAGE,QAAA,KAAK,EAAEG,OAAO,CAACL,KAHjB;AAIE,QAAA,QAAQ,EAAEK,OAAO,CAACJ,QAJpB;AAKE,QAAA,QAAQ,EAAEI,OAAO,CAACF;AALpB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAjCQP,Q;UACSV,S;;;KADTU,Q;AAmCT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { Box, Toolbar, Typography } from \"@mui/material\";\n// import \"../styles/Projects.css\";\nimport TitleSidebar from \"../components/TitleSidebar\";\nimport ItemCard from \"../components/ItemCard\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"100vh\",\n    backgroundColor: \"#F8E9A1\",\n  },\n  cardContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n});\n\nfunction Projects() {\n  const classes = useStyles();\n  const projects = [\n    {\n      id: \"gridiron-gauntlet\",\n      title: \"Gridiron Gauntlet\",\n      subtitle: \"Game Design, Gesture Recognition, Collision Detection\",\n      link: \"https://bit.ly/gridirongauntlet\",\n      textList: [\n        \"Software Methods final project.\",\n        \"Single player iOS clone of the Super Mario Party game, Gridiron Gauntlet. The player must avoid colliding with time-scaled moving enemies within the game board bounds for as long as possible.\",\n        \"Swift/Xcode, SpriteKit, UIKit, GameplayKit, CoreGraphics\",\n      ],\n    },\n  ];\n\n  return (\n    <Box className={classes.root}>\n      <TitleSidebar title=\"Projects\" file=\"projects.pdf\" />\n      <Box className={classes.cardContainer}>\n        <Toolbar />\n        {projects.map((project, i) => (\n          <ItemCard\n            id={`${project.id}-${i}`}\n            link={project.link}\n            title={project.title}\n            subtitle={project.subtitle}\n            textList={project.textList}\n          />\n        ))}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}